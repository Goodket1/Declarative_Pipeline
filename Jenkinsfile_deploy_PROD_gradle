pipeline{
   agent  {
    node {
     label 'CI_env'
     customWorkspace "/var/jenkins/${env.BUILD_NUMBER}"
    }
   }

    environment {
      def server = Artifactory.server 'artifactory'
      def workspace = pwd()
      def tomcat_path = '/opt/tomcat/webapps/ROOT/'

      // Repository on Artifactory
      masterrepo ='version_gradle'

      // Servers
      prod_server = '/var/version/'
      old_release = '/var/oldrelease/'
      http_prod_server = 'http://35.194.45.43:8091'
      artifactory_server = 'https://artifactory.legsup.co.uk/artifactory/'
    }
 stages{
    stage('checkout SCM'){
        steps {
            checkout scm
            script {
              env.http_server = "${http_prod_server}"
              env.sshserver = "${prod_server}"
              env.reponame = "${masterrepo}"
            }
        }
    }
    stage('SonarQube analysis') {
       steps {
         sh "echo OK"
       }
    }
    stage (' approve  publish to PROD? '){
      steps{
         input 'Do you approve  publish to PROD?'
           }
          }
    stage ('Deploy to Server'){
      steps{
         script {
           withCredentials([string(credentialsId: 'my-pass', variable: 'password')]) {
             sh """
               mkdir ${old_release}${env.BUILD_NUMBER} && \
               mv ${prod_server}* ${old_release}/${env.BUILD_NUMBER} && \
               curl -u admin:${password} -O ${artifactory_server}${reponame}/com/efsavage/web_app/${version}/web_app-${version}.war && \
               unzip web_app-${version}.war -d ${prod_server}
             """
              }
            }
         }
      }
    stage ('Test URL '){
      steps{
         script {
           def response = httpRequest env.http_server
           println("Status: "+response.status)
           }
         }
      }
    }
  post {
   success {
     echo "Show result on ${http_server}"
     }
 }
}


