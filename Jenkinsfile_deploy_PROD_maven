pipeline{
   agent  {
    node {
     label 'CI_env'
     customWorkspace '/var/jenkins'
    }
   }

 tools {
   maven 'm3'
    }
    environment {
      def server = Artifactory.server 'artifactory'
      buildInfo = Artifactory.newBuildInfo()
      def workspace = pwd()
      def tomcat_path = '/opt/tomcat/webapps/ROOT/'
      id = 'web_app'

      // Repository on Artifactory
      masterrepo ='version'
      stagerepo ='rc'
      devrepo = 'dev'

      // Servers
      dev_server = '/var/else/'
      rc_server = '/var/rc/'
      prod_server = '/var/version/'
      http_dev_server = "http://35.194.45.43:8092/"
      http_stage_server = 'http://35.194.45.43:8090/'
      http_prod_server = 'http://35.194.45.43:8091'
      artifactory_server = 'https://artifactory.legsup.co.uk/artifactory/'
    }
 stages{
    stage('checkout SCM'){
        steps {
            checkout scm
            script {
              env.http_server = "${http_prod_server}"
              env.sshserver = "${prod_server}"
              env.reponame = "${masterrepo}"
            }
        }
    }
   stage ("initialize") {
      steps {
        sh '''
            echo "PATH = ${PATH}"
            echo "M2_HOME = ${M2_HOME}"
            '''
        }
    }

    stage('SonarQube analysis') {
       steps {
         sh "echo OK"
       }
    }

    stage (' approve  publish to PROD? '){
      steps{
       dir( 'app' ) {
         input 'Do you approve  publish to PROD?'
           }
          }
        }
    stage ('Deploy to Server'){
      steps{
       dir( '/var/' ) {
         script {
           withCredentials([string(credentialsId: 'my-pass', variable: 'password')]) {
            sh """
              rm -r ${prod_server}*&& \
              curl -u admin:Tf1cda11 -O ${artifactory_server}${reponame}/com/efsavage/${id}/${version}/${id}-${version}.war && \
              unzip ${id}-${version}.war -d ${prod_server}
              """
              }
              }
            }
         }
      }
    stage ('Test URL '){
      steps{
         script {
           def response = httpRequest env.http_server
           println("Status: "+response.status)
           }
         }
      }
    }
 }


