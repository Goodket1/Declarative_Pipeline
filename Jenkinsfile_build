pipeline{
  agent  {
    node {
     label 'CI_env'
        customWorkspace '/var/jenkins'
    }
 }
   tools {
     maven 'm3'
   }
   environment {
      def workspace = pwd()
      def tomcat_path = '/opt/tomcat/webapps/ROOT/'
      // Servers
      slave = '10.5.0.14'
      QA_server = '10.5.0.15'
      artifactory_server = 'http://10.5.0.12:8081/artifactory/'
      reponame = 'snapshots'
      http_server = "http://${slave}:8080/${env.BUILD_NUMBER}"
      localrepo = '/root/.m2/repository'
   }
 stages{
    stage('checkout SCM'){
        steps {
            checkout scm
        }
    }
    stage ("initialize") {
      steps {
        sh '''
            echo "PATH = ${PATH}"
            echo "M2_HOME = ${M2_HOME}"
            '''
        }
    }

    stage('SonarQube analysis') {
       when { not { branch 'master'}}
       steps {
         sh "echo OK"
       }
    }
    stage (' Build '){
      steps{
       dir( 'app' ) {
                sh 'mvn clean install'
       }
    }
   }
   stage ('Build Docker image with .war'){
    steps{
        script{
           def pom = readMavenPom file: 'app/pom.xml'
           id = "web_app"
           version = "0.1.10"
           sh "cp ${localrepo}/com/efsavage/${id}/${version}/${id}-${version}.war ./project.war"
           withDockerRegistry([credentialsId: 'artifactory', url: "https:/artifactory.legsup.co.uk:8082/"]) {
           def image = docker.build("artifactory.legsup.co.uk:8082/${id}:${version}.${BUILD_NUMBER}", "--build-arg PACKAGE_VERSION=${version} .")

        }
      }

   }
 }
//    stage ('push Docker image'){
//    steps{
//        script{
//              def server = Artifactory.newServer url: 'http://artifactory.legsup.co.uk:8082', username: 'admin', password: 'password'
//    def artDocker= Artifactory.docker username: 'admin', password: 'Tf1cda11'
//    def dockerInfo = artDocker.push 'hello-world:latest', 'docker'
//    server.publishBuildInfo(dockerInfo)
//      }

//   }
// }
}
}
