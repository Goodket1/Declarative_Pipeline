pipeline{
  agent  {
    node any
     {   label 'CI_env'
        customWorkspace '/var/jenkins'
    }
 }
   tools {
     maven 'm3'
   }
   environment {
      def workspace = pwd()
      def tomcat_path = '/opt/tomcat/webapps/ROOT/'
      // Servers
      slave = '10.5.0.14'
      QA_server = '10.5.0.15'
      artifactory_server = 'http://10.5.0.12:8081/artifactory/'
      reponame = 'snapshots'
      http_server = "http://${slave}:8080/${env.BUILD_NUMBER}"
      localrepo = '/var/lib/jenkins/.m2/repository/'
   }
 stages{
    stage('checkout SCM'){
        steps {
            checkout scm
        }
    }
    stage ("initialize") {
      steps {
        sh '''
            echo "PATH = ${PATH}"
            echo "M2_HOME = ${M2_HOME}"
            '''
        }
    }

    stage('SonarQube analysis') {
       when { not { branch 'master'}}
       steps {
         sh "echo OK"
       }
    }
    stage (' Build '){
      steps{
       dir( 'app' ) {
                sh 'mvn clean install'
       }
    }
   }
   stage ('Build Docker image with .war'){
    steps{
        script{
           def pom = readMavenPom file: 'app/pom.xml'
           id = pom.artifactId
           version = pom.version
           groupId = pom.groupId
           packaging = pom.packaging
           sh "cp ${localrepo}/com/efsavage/${id}/${version}/${id}-${version}.war ../project.war"
           newImage = docker.build("koretskyi2/web_app:${version}.${BUILD_NUMBER}")
           withDockerRegistry([credentialsId: 'artifactory', url: "http://35.188.126.81:8081/artifactory/"]) {
              newImage.push("koretskyi2/web_app:${version}.${BUILD_NUMBER}")
           }
      }

   }
 }
}
}
