pipeline{
   agent  {
    node {
     label 'CI_env'
     customWorkspace '/var/jenkins'
    }
   }

   tools {
     maven 'm3'
   }

   options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        timeout(time: 1, unit: 'HOURS')
   }

   environment {
      def workspace = pwd()
      http_server = "http://${slave}:8080/${env.BUILD_NUMBER}"
      registry = 'artifactory.legsup.co.uk:8082'
      localrepo = '/root/.m2/repository'
      pomversion = readMavenPom(file:'app/pom.xml').getVersion()
      pomid = readMavenPom(file:'app/pom.xml').getArtifactId()
   }
 stages{
    stage('checkout SCM'){
        steps {
            checkout scm
        }
    }

    stage ("initialize") {
      steps {
        sh '''
            echo "PATH = ${PATH}"
            echo "M2_HOME = ${M2_HOME}"
           '''
        }
    }

    stage('SonarQube analysis') {
       steps {
         sh "echo SonarQube analysis OK"
       }
    }

    stage (' Build '){
      steps{
       dir( 'app' ) {
                sh 'mvn clean install'
       }
    }
   }

   stage ('Build Docker image with .war'){
    steps{
      script{
         sh "cp ${localrepo}/com/efsavage/${pomid}/${pomversion}/${pomid}-${pomversion}.war ./ROOT.war"
         image = docker.build("${registry}/${pomid}:${pomversion}_rc")
         withDockerRegistry([credentialsId: 'artifactory', url: "https://${registry}"]) {
           image.push()
         }
      }
    }
 }
 }
}
